// Code generated by protoc-gen-go.
// source: common.proto
// DO NOT EDIT!

/*
Package oaktree is a generated protocol buffer package.

It is generated from these files:
	common.proto

It has these top-level messages:
	Project
	Location
	Filter
*/
package oaktree

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Project struct {
	// Types that are valid to be assigned to Project:
	//	*Project_Id
	//	*Project_Name
	Project isProject_Project `protobuf_oneof:"project"`
	// Types that are valid to be assigned to Domain:
	//	*Project_DomainId
	//	*Project_DomainName
	Domain isProject_Domain `protobuf_oneof:"domain"`
}

func (m *Project) Reset()                    { *m = Project{} }
func (m *Project) String() string            { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()               {}
func (*Project) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isProject_Project interface {
	isProject_Project()
}
type isProject_Domain interface {
	isProject_Domain()
}

type Project_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type Project_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,oneof"`
}
type Project_DomainId struct {
	DomainId string `protobuf:"bytes,3,opt,name=domain_id,json=domainId,oneof"`
}
type Project_DomainName struct {
	DomainName string `protobuf:"bytes,4,opt,name=domain_name,json=domainName,oneof"`
}

func (*Project_Id) isProject_Project()        {}
func (*Project_Name) isProject_Project()      {}
func (*Project_DomainId) isProject_Domain()   {}
func (*Project_DomainName) isProject_Domain() {}

func (m *Project) GetProject() isProject_Project {
	if m != nil {
		return m.Project
	}
	return nil
}
func (m *Project) GetDomain() isProject_Domain {
	if m != nil {
		return m.Domain
	}
	return nil
}

func (m *Project) GetId() string {
	if x, ok := m.GetProject().(*Project_Id); ok {
		return x.Id
	}
	return ""
}

func (m *Project) GetName() string {
	if x, ok := m.GetProject().(*Project_Name); ok {
		return x.Name
	}
	return ""
}

func (m *Project) GetDomainId() string {
	if x, ok := m.GetDomain().(*Project_DomainId); ok {
		return x.DomainId
	}
	return ""
}

func (m *Project) GetDomainName() string {
	if x, ok := m.GetDomain().(*Project_DomainName); ok {
		return x.DomainName
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Project) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Project_OneofMarshaler, _Project_OneofUnmarshaler, _Project_OneofSizer, []interface{}{
		(*Project_Id)(nil),
		(*Project_Name)(nil),
		(*Project_DomainId)(nil),
		(*Project_DomainName)(nil),
	}
}

func _Project_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Project)
	// project
	switch x := m.Project.(type) {
	case *Project_Id:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *Project_Name:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Name)
	case nil:
	default:
		return fmt.Errorf("Project.Project has unexpected type %T", x)
	}
	// domain
	switch x := m.Domain.(type) {
	case *Project_DomainId:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.DomainId)
	case *Project_DomainName:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.DomainName)
	case nil:
	default:
		return fmt.Errorf("Project.Domain has unexpected type %T", x)
	}
	return nil
}

func _Project_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Project)
	switch tag {
	case 1: // project.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Project = &Project_Id{x}
		return true, err
	case 2: // project.name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Project = &Project_Name{x}
		return true, err
	case 3: // domain.domain_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Domain = &Project_DomainId{x}
		return true, err
	case 4: // domain.domain_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Domain = &Project_DomainName{x}
		return true, err
	default:
		return false, nil
	}
}

func _Project_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Project)
	// project
	switch x := m.Project.(type) {
	case *Project_Id:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *Project_Name:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Name)))
		n += len(x.Name)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// domain
	switch x := m.Domain.(type) {
	case *Project_DomainId:
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.DomainId)))
		n += len(x.DomainId)
	case *Project_DomainName:
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.DomainName)))
		n += len(x.DomainName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Location struct {
	Cloud   string   `protobuf:"bytes,1,opt,name=cloud" json:"cloud,omitempty"`
	Region  string   `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
	Zone    string   `protobuf:"bytes,3,opt,name=zone" json:"zone,omitempty"`
	Project *Project `protobuf:"bytes,4,opt,name=project" json:"project,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Location) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

type Filter struct {
	Location *Location         `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	NameOrId string            `protobuf:"bytes,2,opt,name=name_or_id,json=nameOrId" json:"name_or_id,omitempty"`
	Jmespath string            `protobuf:"bytes,3,opt,name=jmespath" json:"jmespath,omitempty"`
	Filter   map[string]string `protobuf:"bytes,4,rep,name=filter" json:"filter,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Filter) Reset()                    { *m = Filter{} }
func (m *Filter) String() string            { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()               {}
func (*Filter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Filter) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Filter) GetFilter() map[string]string {
	if m != nil {
		return m.Filter
	}
	return nil
}

func init() {
	proto.RegisterType((*Project)(nil), "oaktree.Project")
	proto.RegisterType((*Location)(nil), "oaktree.Location")
	proto.RegisterType((*Filter)(nil), "oaktree.Filter")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x91, 0xc1, 0x4e, 0xf3, 0x30,
	0x0c, 0xc7, 0xbf, 0x6e, 0xfb, 0xba, 0xce, 0xe5, 0x30, 0x2c, 0x84, 0xa6, 0x01, 0x12, 0xec, 0x84,
	0x90, 0xd8, 0x61, 0xbb, 0x00, 0xc7, 0x49, 0x20, 0x90, 0x10, 0xa0, 0xbc, 0xc0, 0x14, 0xba, 0x00,
	0xdd, 0xda, 0xb8, 0x0a, 0x19, 0x62, 0x3c, 0x01, 0xaf, 0xc9, 0x9b, 0x90, 0x26, 0x5e, 0xc5, 0x29,
	0xf6, 0xdf, 0x8e, 0xfe, 0x3f, 0xdb, 0xb0, 0x93, 0x51, 0x59, 0x92, 0x1e, 0x57, 0x86, 0x2c, 0x61,
	0x97, 0xe4, 0xca, 0x1a, 0xa5, 0x46, 0xdf, 0x11, 0x74, 0x9f, 0x0c, 0x2d, 0x55, 0x66, 0xb1, 0x0f,
	0xad, 0x7c, 0x31, 0x88, 0x8e, 0xa3, 0xd3, 0xde, 0xed, 0x3f, 0xe1, 0x62, 0xdc, 0x83, 0x8e, 0x96,
	0xa5, 0x1a, 0xb4, 0x58, 0xf3, 0x19, 0x1e, 0x41, 0x6f, 0x41, 0xa5, 0xcc, 0xf5, 0xdc, 0xb5, 0xb7,
	0x7d, 0x29, 0x12, 0x49, 0x90, 0xee, 0x16, 0x78, 0x02, 0x29, 0x97, 0xfd, 0xdf, 0x0e, 0x37, 0x40,
	0x10, 0x1f, 0x9c, 0x36, 0xeb, 0x41, 0xb7, 0x0a, 0xa6, 0xb3, 0x04, 0xe2, 0x50, 0x18, 0x7d, 0x42,
	0x72, 0x4f, 0x99, 0xb4, 0x39, 0x69, 0x67, 0xfc, 0x3f, 0x2b, 0x68, 0xcd, 0x34, 0x22, 0x24, 0xb8,
	0x0f, 0xb1, 0x51, 0xaf, 0xae, 0x1e, 0x80, 0x04, 0x67, 0x88, 0xd0, 0xf9, 0x22, 0xad, 0x02, 0x8b,
	0xf0, 0x31, 0x9e, 0x35, 0x16, 0x9e, 0x20, 0x9d, 0xf4, 0xc7, 0x3c, 0xf3, 0x98, 0xe7, 0x15, 0xdb,
	0x86, 0xd1, 0x4f, 0x04, 0xf1, 0x4d, 0x5e, 0x58, 0x65, 0xf0, 0x1c, 0x92, 0x82, 0x21, 0xbc, 0x77,
	0x3a, 0xd9, 0x6d, 0xfe, 0x6d, 0xe9, 0x44, 0xd3, 0x82, 0x87, 0x00, 0xf5, 0x90, 0x73, 0x32, 0xf5,
	0x2e, 0x02, 0x55, 0x52, 0x2b, 0x8f, 0xc6, 0x6d, 0x62, 0x08, 0xc9, 0xb2, 0x54, 0xef, 0x95, 0xb4,
	0x6f, 0xcc, 0xd6, 0xe4, 0x38, 0x85, 0xf8, 0xc5, 0x5b, 0x3a, 0xbc, 0xb6, 0xb3, 0x39, 0x68, 0x6c,
	0x02, 0x09, 0x3f, 0xd7, 0xda, 0x9a, 0x8d, 0xe0, 0xd6, 0xe1, 0x25, 0xa4, 0x7f, 0x64, 0x77, 0xb0,
	0xf6, 0x4a, 0x6d, 0x78, 0x47, 0x75, 0x58, 0xef, 0xed, 0x43, 0x16, 0x6b, 0xbe, 0x98, 0x08, 0xc9,
	0x55, 0xeb, 0x22, 0x7a, 0x8e, 0xfd, 0xe1, 0xa7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x07, 0x5f,
	0x60, 0xca, 0x08, 0x02, 0x00, 0x00,
}
